let WhatsAlexa = require('../events');
let Config = require('../config');
let {MessageType} = require('@adiwajshing/baileys');
let Language = require('../language');
let Lang = Language.getString('list');
let td = Config.WORKTYPE == 'public' ? false : true
let hrs = new Date().getHours()

var wish = ''
var wishml = ''
var wishid = ''
var anti_link = ''
var auto_bio = ''
var language = ''
var MSG = ''
var FMSG = ''
if (hrs < 12) wish = 'May today bring you the joys of yesterday‚Äôs hopes! Good Morning ‚õÖ', wishml = '‡¥á‡¥®‡µç‡¥®‡¥≤‡¥§‡µç‡¥§‡µÜ ‡¥™‡µç‡¥∞‡¥§‡µÄ‡¥ï‡µç‡¥∑‡¥ï‡¥≥‡µÅ‡¥ü‡µÜ ‡¥∏‡¥®‡µç‡¥§‡µã‡¥∑‡¥Ç ‡¥á‡¥®‡µç‡¥®‡µç ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡µæ‡¥ï‡µç‡¥ï‡µç ‡¥®‡µΩ‡¥ï‡¥ü‡µç‡¥ü‡µÜ! ‡¥∏‡µÅ‡¥™‡µç‡¥∞‡¥≠‡¥æ‡¥§‡¥Ç ‚õÖ', wishid = 'Semoga hari ini membawakan Anda kegembiraan dari harapan kemarin! Selamat pagi ‚õÖ'
if (hrs < 16) wish = 'Wishing you a Healthy & Happy Fabulous Noon! Good Afternoon üåû', wishml = '‡¥®‡¥ø‡¥ô‡µç‡¥ô‡µæ‡¥ï‡µç‡¥ï‡µç ‡¥Ü‡¥∞‡µã‡¥ó‡µç‡¥Ø‡¥ï‡¥∞‡¥µ‡µÅ‡¥Ç ‡¥∏‡¥®‡µç‡¥§‡µã‡¥∑‡¥ï‡¥∞‡¥µ‡µÅ‡¥Æ‡¥æ‡¥Ø ‡¥Ö‡¥§‡¥ø‡¥∂‡¥Ø‡¥ï‡¥∞‡¥Æ‡¥æ‡¥Ø ‡¥â‡¥ö‡µç‡¥ö‡¥≠‡¥ï‡µç‡¥∑‡¥£‡¥Ç ‡¥Ü‡¥∂‡¥Ç‡¥∏‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ! ‡¥ó‡µÅ‡¥°‡µç ‡¥Ü‡¥´‡µç‡¥±‡µç‡¥±‡µº‡¥®‡µÇ‡µ∫ üåû', wishid - 'Semoga Anda Sehat & Selamat Siang yang Luar Biasa! Selamat siang üåû'
if (hrs < 21) wish = 'May the setting sun take down all your sufferings with it and make you hopeful for a new day! Good Evening üå•', wishml = '‡¥Ö‡¥∏‡µç‡¥§‡¥Æ‡¥Ø ‡¥∏‡µÇ‡¥∞‡µç‡¥Ø‡µª ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥é‡¥≤‡µç‡¥≤‡¥æ ‡¥ï‡¥∑‡µç‡¥ü‡¥™‡µç‡¥™‡¥æ‡¥ü‡µÅ‡¥ï‡¥≥‡µÅ‡¥Ç ‡¥á‡¥≤‡µç‡¥≤‡¥æ‡¥§‡¥æ‡¥ï‡µç‡¥ï‡µÅ‡¥ï‡¥Ø‡µÅ‡¥Ç ‡¥í‡¥∞‡µÅ ‡¥™‡µÅ‡¥§‡¥ø‡¥Ø ‡¥¶‡¥ø‡¥µ‡¥∏‡¥§‡µç‡¥§‡¥ø‡¥®‡¥æ‡¥Ø‡¥ø ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÜ ‡¥™‡µç‡¥∞‡¥§‡µÄ‡¥ï‡µç‡¥∑‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï‡¥Ø‡µÅ‡¥Ç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡¥ü‡µç‡¥ü‡µÜ! ‡¥ó‡µÅ‡¥°‡µç ‡¥à‡¥µ‡¥®‡¥ø‡¥Ç‡¥ó‡µç üå•', wishid = 'Semoga matahari terbenam menghapus semua penderitaan Anda dengannya dan membuat Anda berharap untuk hari yang baru! Selamat malam üå•'
if (hrs < 24) wish = 'Touch your heart, close your eyes, make a wish & Sleep! Good night üåô', wishml = '‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥π‡µÉ‡¥¶‡¥Ø‡¥§‡µç‡¥§‡¥ø‡µΩ ‡¥∏‡µç‡¥™‡µº‡¥∂‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï, ‡¥ï‡¥£‡µç‡¥£‡µÅ‡¥ï‡µæ ‡¥Ö‡¥ü‡¥Ø‡µç‡¥ï‡µç‡¥ï‡µÅ‡¥ï, ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥Æ‡¥®‡¥∏‡µç‡¥∏‡¥ø‡µΩ ‡¥í‡¥∞‡µÅ ‡¥Ü‡¥ó‡µç‡¥∞‡¥π‡¥Ç ‡¥™‡¥±‡¥Ø‡µÅ‡¥ï‡¥Ø‡µÅ‡¥Ç ‡¥â‡¥±‡¥ô‡µç‡¥ô‡µÅ‡¥ï‡¥Ø‡µÅ‡¥Ç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï! ‡¥∂‡µÅ‡¥≠ ‡¥∞‡¥æ‡¥§‡µç‡¥∞‡¥ø üåô', wishid = 'Sentuh hatimu, pejamkan matamu, buat permohonan & Tidur! Selamat malam üåô'
if (Config.ANTILINK == 'true') anti_link = 'On'
if (Config.ANTILINK == 'false') anti_link = 'Off'
if (Config.AUTOBIO == 'true') auto_bio = 'On'
if (Config.AUTOBIO == 'false') auto_bio = 'Off'
if (Config.LANG == 'EN') language = 'English', FMSG = '\n\nHave a Nice Day üíñ\n\n```Thank You For using WhatsAlexa üíï```\n*WhatsAlexa, Made By Toxic Devil*',  MSG = '*‚óÑ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚¶Å‚¶Å‚óØ‚¶Å‚¶Å‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ñ∫*\n   *‚¶Å‚óä‚ïê‚¶Å Whats üë∏ Alexa ‚¶Å‚ïê‚óä‚¶Å*\n*‚óÑ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚¶Å‚¶Å‚óØ‚¶Å‚¶Å‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ñ∫*\n\nHey user,\n*'+wish+'*\n\n*‚óÜ BOT INFO ‚óÜ*\n\n```‚ñ£ Developer:``` *TOXIC DEVIL*\n```‚ñ£ Owner:``` *'+Config.OWNER+'*\n```‚ñ£ Contact Owner:``` *wa.me/'+Config.OWNERNUM+'*\n```‚ñ£ Language:``` *'+language+'*\n```‚ñ£ Work Type:``` *'+Config.WORKTYPE+'*\n\n‚àé ‚áì *Commands* ‚áì ‚àé\n\n'
if (Config.LANG == 'ML') language = '‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥Ç', FMSG = '\n\n‡¥í‡¥∞‡µÅ ‡¥®‡¥≤‡µç‡¥≤ ‡¥¶‡¥ø‡¥®‡¥Ç ‡¥Ü‡¥∂‡¥Ç‡¥∏‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ üíñ\n\n```WhatsAlexa ‡¥â‡¥™‡¥Ø‡µã‡¥ó‡¥ø‡¥ö‡µç‡¥ö‡¥§‡¥ø‡¥®‡µç ‡¥®‡¥®‡µç‡¥¶‡¥ø üíï```\n*WhatsAlexa, ‡¥â‡¥£‡µç‡¥ü‡¥æ‡¥ï‡µç‡¥ï‡¥ø‡¥Ø‡¥§‡µç Toxic Devil*', MSG = '*‚óÑ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚¶Å‚¶Å‚óØ‚¶Å‚¶Å‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ñ∫*\n   *‚¶Å‚óä‚ïê‚¶Å Whats üë∏ Alexa ‚¶Å‚ïê‚óä‚¶Å*\n*‚óÑ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚¶Å‚¶Å‚óØ‚¶Å‚¶Å‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ñ∫*\n\n‡¥®‡¥Æ‡¥∏‡µç‡¥ï‡¥æ‡¥∞‡¥Ç ‡¥â‡¥™‡¥Ø‡µã‡¥ï‡µç‡¥§‡¥æ‡¥µ‡µá,\n*'+wishml+'*\n\n*‚óÜ ‡¥¨‡µã‡¥ü‡µç‡¥ü‡µç ‡¥µ‡¥ø‡¥µ‡¥∞‡¥Ç ‚óÜ*\n\n```‚ñ£ ‡¥°‡µÜ‡¥µ‡¥≤‡¥™‡µç‡¥™‡µº:``` *TOXIC DEVIL*\n```‚ñ£ ‡¥â‡¥ü‡¥Æ:``` *'+Config.OWNER+'*\n```‚ñ£ ‡¥â‡¥ü‡¥Æ‡¥Ø‡µÅ‡¥Æ‡¥æ‡¥Ø‡¥ø ‡¥¨‡¥®‡µç‡¥ß‡¥™‡µç‡¥™‡µÜ‡¥ü‡µÅ‡¥ï:``` *wa.me/'+Config.OWNERNUM+'*\n```‚ñ£ ‡¥≠‡¥æ‡¥∑:``` *'+language+'*\n```‚ñ£ Auto Bio:``` *'+auto_bio+'*\n```‚ñ£ Antilink:``` *'+anti_link+'*\n```‚ñ£ ‡¥µ‡¥∞‡µç‚Äç‡¥ï‡µç‡¥ï‡µç‚Äå ‡¥§‡¥∞‡¥Ç:``` *'+Config.WORKTYPE+'*\n\n‚àé ‚áì *‡¥ï‡¥Æ‡¥æ‡µª‡¥°‡µÅ‡¥ï‡µæ* ‚áì ‚àé\n\n'
if (Config.LANG == 'ID') language = 'Indonasian', FMSG = '\n\nSemoga harimu menyenangkan üíñ\n\n```Terima kasih telah menggunakan WhatsAlexa üíï```\n*WhatsAlexa, Dibuat oleh Toxic Devil*', MSG = '*‚óÑ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚¶Å‚¶Å‚óØ‚¶Å‚¶Å‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ñ∫*\n   *‚¶Å‚óä‚ïê‚¶Å Whats üë∏ Alexa ‚¶Å‚ïê‚óä‚¶Å*\n*‚óÑ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚¶Å‚¶Å‚óØ‚¶Å‚¶Å‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ñ∫*\n\nHai pengguna,\n*'+wishid+'*\n\n*‚óÜ INFORMASI BOT ‚óÜ*\n\n```‚ñ£ Pengembang:``` *TOXIC DEVIL*\n```‚ñ£ Pemilik:``` *'+Config.OWNER+'*\n```‚ñ£ Hubungi Pemilik:``` *wa.me/'+Config.OWNERNUM+'*\n```‚ñ£ Bahasa:``` *'+language+'*\n```‚ñ£ Auto Bio:``` *'+auto_bio+'*\n```‚ñ£ Antilink:``` *'+anti_link+'*\n```‚ñ£ Jenis Pekerjaan:``` *'+Config.WORKTYPE+'*\n\n‚àé ‚áì *Perintah* ‚áì ‚àé\n\n'

    WhatsAlexa.addCommand({pattern: 'list ?(.*)', fromMe: td, dontAddCommandList: true}, (async (message, match) => {

        if (message.jid === '905524317852-1612300121@g.us') {

            return;
        }

        var CMD_HELP = '';
        if (match[1] === '') {
            WhatsAlexa.commands.map(
                async (command) =>  {
                    if (command.dontAddCommandList || command.pattern === undefined) return;
                    try {
                        var match = command.pattern.toString().match(/(\W*)([A-Za-zƒü√º≈üi√∂√ß1234567890]*)/);
                    } catch {
                        var match = [command.pattern];
                    }
    
                    var HANDLER = '';
    
                    if (/\[(\W*)\]/.test(Config.HANDLERS)) {
                        HANDLER = Config.HANDLERS.match(/\[(\W*)\]/)[1][0];
                    } else {
                        HANDLER = '.';
                    }
                    CMD_HELP += '*üéØ ' + Lang.COMMAND + ':* ```' + (match.length >= 3 ? (HANDLER + match[2]) : command.pattern) + (command.desc === '' ? '```\n\n' : '```\n');
                    if (command.desc !== '') CMD_HELP += '*üìù ' + Lang.DESC + ':* ```' + command.desc + (command.warn === '' ? '```\n\n' : '```\n');
                    if (command.usage !== '') CMD_HELP += '*‚å®Ô∏è ' + Lang.EXAMPLE + ':* ```' + command.usage + '```\n\n';
                    if (command.warn !== '') CMD_HELP += '*‚ö†Ô∏è ' + Lang.WARN + ':* ```' + command.warn + '```\n\n';

                }
            );
        
            await message.client.sendMessage(
                message.jid, MSG + CMD_HELP + FMSG, MessageType.text, {contextInfo: { forwardingScore: 1000, isForwarded: true }, quoted: message.data
            })
        } else {

            if (message.jid === '905524317852-1612300121@g.us') {

                return;
            }
            var CMD_HELP = '';
            WhatsAlexa.commands.map(
                async (command) =>  {
                    if (command.dontAddCommandList || command.pattern === undefined) return;
                    try {
                        var cmatch = command.pattern.toString().match(/(\W*)([A-Za-zƒü√º≈üi√∂√ß1234567890]*)/);
                    } catch {
                        var cmatch = [command.pattern];
                    }
                
                    if (cmatch[2] == match[1]) {
                        var HANDLER = '';
    
                        if (/\[(\W*)\]/.test(Config.HANDLERS)) {
                            HANDLER = Config.HANDLERS.match(/\[(\W*)\]/)[1][0];
                        } else {
                            HANDLER = '.';
                        }
                        CMD_HELP += '*üéØ ' + Lang.COMMAND + ':* ```' + (cmatch.length >= 3 ? (HANDLER + cmatch[2]) : command.pattern) + (command.desc === '' ? '```\n\n' : '```\n');
                        if (command.desc !== '') CMD_HELP += '*üìù ' + Lang.DESC + ':* ```' + command.desc + (command.warn === '' ? '```\n\n' : '```\n');
                        if (command.usage !== '') CMD_HELP += '*‚å®Ô∏è ' + Lang.EXAMPLE + ':* ```' + command.usage + '```\n\n';
                        if (command.warn !== '') CMD_HELP += '*‚ö†Ô∏è ' + Lang.WARN + ':* ```' + command.warn + '```\n\n';

                    }
                }
            );
            if (CMD_HELP === '') CMD_HELP += Lang.NOT_FOUND;
            await message.client.sendMessage(
                message.jid, MSG + CMD_HELP + FMSG, MessageType.text, {contextInfo: { forwardingScore: 1000, isForwarded: true }, quoted: message.data
            })
        }
    }));

    WhatsAlexa.addCommand({pattern: 'menu ?(.*)', fromMe: td, dontAddCommandList: true}, (async (message, match) => {

        if (message.jid === '905524317852-1612300121@g.us') {

            return;
        }

        var CMD_HELP = '';
        if (match[1] === '') {
            WhatsAlexa.commands.map(
                async (command) =>  {
                    if (command.dontAddCommandList || command.pattern === undefined) return;
                    try {
                        var match = command.pattern.toString().match(/(\W*)([A-Za-zƒü√º≈üi√∂√ß1234567890]*)/);
                    } catch {
                        var match = [command.pattern];
                    }
    
                    var HANDLER = '';
    
                    if (/\[(\W*)\]/.test(Config.HANDLERS)) {
                        HANDLER = Config.HANDLERS.match(/\[(\W*)\]/)[1][0];
                    } else {
                        HANDLER = '.';
                    }
                    CMD_HELP += '*üéØ ' + Lang.COMMAND + ':* ```' + (match.length >= 3 ? (HANDLER + match[2]) : command.pattern) + (command.desc === '' ? '```\n\n' : '```\n');
                    if (command.desc !== '') CMD_HELP += '*üìù ' + Lang.DESC + ':* ```' + command.desc + (command.warn === '' ? '```\n\n' : '```\n');
                    if (command.usage !== '') CMD_HELP += '*‚å®Ô∏è ' + Lang.EXAMPLE + ':* ```' + command.usage + '```\n\n';
                    if (command.warn !== '') CMD_HELP += '*‚ö†Ô∏è ' + Lang.WARN + ':* ```' + command.warn + '```\n\n';

                }
            );
        
            await message.client.sendMessage(
                message.jid, MSG + CMD_HELP + FMSG, MessageType.text, {contextInfo: { forwardingScore: 1000, isForwarded: true }, quoted: message.data
            })
        } else {

            if (message.jid === '905524317852-1612300121@g.us') {

                return;
            }
            var CMD_HELP = '';
            WhatsAlexa.commands.map(
                async (command) =>  {
                    if (command.dontAddCommandList || command.pattern === undefined) return;
                    try {
                        var cmatch = command.pattern.toString().match(/(\W*)([A-Za-zƒü√º≈üi√∂√ß1234567890]*)/);
                    } catch {
                        var cmatch = [command.pattern];
                    }
                
                    if (cmatch[2] == match[1]) {
                        var HANDLER = '';
    
                        if (/\[(\W*)\]/.test(Config.HANDLERS)) {
                            HANDLER = Config.HANDLERS.match(/\[(\W*)\]/)[1][0];
                        } else {
                            HANDLER = '.';
                        }
                        CMD_HELP += '*üéØ ' + Lang.COMMAND + ':* ```' + (cmatch.length >= 3 ? (HANDLER + cmatch[2]) : command.pattern) + (command.desc === '' ? '```\n\n' : '```\n');
                        if (command.desc !== '') CMD_HELP += '*üìù ' + Lang.DESC + ':* ```' + command.desc + (command.warn === '' ? '```\n\n' : '```\n');
                        if (command.usage !== '') CMD_HELP += '*‚å®Ô∏è ' + Lang.EXAMPLE + ':* ```' + command.usage + '```\n\n';
                        if (command.warn !== '') CMD_HELP += '*‚ö†Ô∏è ' + Lang.WARN + ':* ```' + command.warn + '```\n\n';

                    }
                }
            );
            if (CMD_HELP === '') CMD_HELP += Lang.NOT_FOUND;
            await message.client.sendMessage(
                message.jid, MSG + CMD_HELP + FMSG, MessageType.text, {contextInfo: { forwardingScore: 1000, isForwarded: true }, quoted: message.data
            })
        }
    }));

    WhatsAlexa.addCommand({pattern: 'help ?(.*)', fromMe: td, dontAddCommandList: true}, (async (message, match) => {

        if (message.jid === '905524317852-1612300121@g.us') {

            return;
        }

        var CMD_HELP = '';
        if (match[1] === '') {
            WhatsAlexa.commands.map(
                async (command) =>  {
                    if (command.dontAddCommandList || command.pattern === undefined) return;
                    try {
                        var match = command.pattern.toString().match(/(\W*)([A-Za-zƒü√º≈üi√∂√ß1234567890]*)/);
                    } catch {
                        var match = [command.pattern];
                    }
    
                    var HANDLER = '';
    
                    if (/\[(\W*)\]/.test(Config.HANDLERS)) {
                        HANDLER = Config.HANDLERS.match(/\[(\W*)\]/)[1][0];
                    } else {
                        HANDLER = '.';
                    }
                    CMD_HELP += '*üéØ ' + Lang.COMMAND + ':* ```' + (match.length >= 3 ? (HANDLER + match[2]) : command.pattern) + (command.desc === '' ? '```\n\n' : '```\n');
                    if (command.desc !== '') CMD_HELP += '*üìù ' + Lang.DESC + ':* ```' + command.desc + (command.warn === '' ? '```\n\n' : '```\n');
                    if (command.usage !== '') CMD_HELP += '*‚å®Ô∏è ' + Lang.EXAMPLE + ':* ```' + command.usage + '```\n\n';
                    if (command.warn !== '') CMD_HELP += '*‚ö†Ô∏è ' + Lang.WARN + ':* ```' + command.warn + '```\n\n';

                }
            );
        
            await message.client.sendMessage(
                message.jid, MSG + CMD_HELP + FMSG, MessageType.text, {contextInfo: { forwardingScore: 1000, isForwarded: true }, quoted: message.data
            })
        } else {

            if (message.jid === '905524317852-1612300121@g.us') {

                return;
            }
            var CMD_HELP = '';
            WhatsAlexa.commands.map(
                async (command) =>  {
                    if (command.dontAddCommandList || command.pattern === undefined) return;
                    try {
                        var cmatch = command.pattern.toString().match(/(\W*)([A-Za-zƒü√º≈üi√∂√ß1234567890]*)/);
                    } catch {
                        var cmatch = [command.pattern];
                    }
                
                    if (cmatch[2] == match[1]) {
                        var HANDLER = '';
    
                        if (/\[(\W*)\]/.test(Config.HANDLERS)) {
                            HANDLER = Config.HANDLERS.match(/\[(\W*)\]/)[1][0];
                        } else {
                            HANDLER = '.';
                        }
                        CMD_HELP += '*üéØ ' + Lang.COMMAND + ':* ```' + (cmatch.length >= 3 ? (HANDLER + cmatch[2]) : command.pattern) + (command.desc === '' ? '```\n\n' : '```\n');
                        if (command.desc !== '') CMD_HELP += '*üìù ' + Lang.DESC + ':* ```' + command.desc + (command.warn === '' ? '```\n\n' : '```\n');
                        if (command.usage !== '') CMD_HELP += '*‚å®Ô∏è ' + Lang.EXAMPLE + ':* ```' + command.usage + '```\n\n';
                        if (command.warn !== '') CMD_HELP += '*‚ö†Ô∏è ' + Lang.WARN + ':* ```' + command.warn + '```\n\n';

                    }
                }
            );
            if (CMD_HELP === '') CMD_HELP += Lang.NOT_FOUND;
            await message.client.sendMessage(
                message.jid, MSG + CMD_HELP + FMSG, MessageType.text, {contextInfo: { forwardingScore: 1000, isForwarded: true }, quoted: message.data
            })
        }
    }));

    WhatsAlexa.addCommand({pattern: 'alexa ?(.*)', fromMe: td, dontAddCommandList: true}, (async (message, match) => {

        if (message.jid === '905524317852-1612300121@g.us') {

            return;
        }

        var CMD_HELP = '';
        if (match[1] === '') {
            WhatsAlexa.commands.map(
                async (command) =>  {
                    if (command.dontAddCommandList || command.pattern === undefined) return;
                    try {
                        var match = command.pattern.toString().match(/(\W*)([A-Za-zƒü√º≈üi√∂√ß1234567890]*)/);
                    } catch {
                        var match = [command.pattern];
                    }
    
                    var HANDLER = '';
    
                    if (/\[(\W*)\]/.test(Config.HANDLERS)) {
                        HANDLER = Config.HANDLERS.match(/\[(\W*)\]/)[1][0];
                    } else {
                        HANDLER = '.';
                    }
                    CMD_HELP += '*üéØ ' + Lang.COMMAND + ':* ```' + (match.length >= 3 ? (HANDLER + match[2]) : command.pattern) + (command.desc === '' ? '```\n\n' : '```\n');
                    if (command.desc !== '') CMD_HELP += '*üìù ' + Lang.DESC + ':* ```' + command.desc + (command.warn === '' ? '```\n\n' : '```\n');
                    if (command.usage !== '') CMD_HELP += '*‚å®Ô∏è ' + Lang.EXAMPLE + ':* ```' + command.usage + '```\n\n';
                    if (command.warn !== '') CMD_HELP += '*‚ö†Ô∏è ' + Lang.WARN + ':* ```' + command.warn + '```\n\n';

                }
            );
        
            await message.client.sendMessage(
                message.jid, MSG + CMD_HELP + FMSG, MessageType.text, {contextInfo: { forwardingScore: 1000, isForwarded: true }, quoted: message.data
            })
        } else {

            if (message.jid === '905524317852-1612300121@g.us') {

                return;
            }
            var CMD_HELP = '';
            WhatsAlexa.commands.map(
                async (command) =>  {
                    if (command.dontAddCommandList || command.pattern === undefined) return;
                    try {
                        var cmatch = command.pattern.toString().match(/(\W*)([A-Za-zƒü√º≈üi√∂√ß1234567890]*)/);
                    } catch {
                        var cmatch = [command.pattern];
                    }
                
                    if (cmatch[2] == match[1]) {
                        var HANDLER = '';
    
                        if (/\[(\W*)\]/.test(Config.HANDLERS)) {
                            HANDLER = Config.HANDLERS.match(/\[(\W*)\]/)[1][0];
                        } else {
                            HANDLER = '.';
                        }
                        CMD_HELP += '*üéØ ' + Lang.COMMAND + ':* ```' + (cmatch.length >= 3 ? (HANDLER + cmatch[2]) : command.pattern) + (command.desc === '' ? '```\n\n' : '```\n');
                        if (command.desc !== '') CMD_HELP += '*üìù ' + Lang.DESC + ':* ```' + command.desc + (command.warn === '' ? '```\n\n' : '```\n');
                        if (command.usage !== '') CMD_HELP += '*‚å®Ô∏è ' + Lang.EXAMPLE + ':* ```' + command.usage + '```\n\n';
                        if (command.warn !== '') CMD_HELP += '*‚ö†Ô∏è ' + Lang.WARN + ':* ```' + command.warn + '```\n\n';

                    }
                }
            );
            if (CMD_HELP === '') CMD_HELP += Lang.NOT_FOUND;
            await message.client.sendMessage(
                message.jid, MSG + CMD_HELP + FMSG, MessageType.text, {contextInfo: { forwardingScore: 1000, isForwarded: true }, quoted: message.data
            })
        }
    }));

    WhatsAlexa.addCommand({pattern: 'cmd ?(.*)', fromMe: td, dontAddCommandList: true}, (async (message, match) => {

        if (message.jid === '905524317852-1612300121@g.us') {

            return;
        }

        var CMD_HELP = '';
        if (match[1] === '') {
            WhatsAlexa.commands.map(
                async (command) =>  {
                    if (command.dontAddCommandList || command.pattern === undefined) return;
                    try {
                        var match = command.pattern.toString().match(/(\W*)([A-Za-zƒü√º≈üi√∂√ß1234567890]*)/);
                    } catch {
                        var match = [command.pattern];
                    }
    
                    var HANDLER = '';
    
                    if (/\[(\W*)\]/.test(Config.HANDLERS)) {
                        HANDLER = Config.HANDLERS.match(/\[(\W*)\]/)[1][0];
                    } else {
                        HANDLER = '.';
                    }
                    CMD_HELP += '*üéØ ' + Lang.COMMAND + ':* ```' + (match.length >= 3 ? (HANDLER + match[2]) : command.pattern) + (command.desc === '' ? '```\n\n' : '```\n');
                    if (command.desc !== '') CMD_HELP += '*üìù ' + Lang.DESC + ':* ```' + command.desc + (command.warn === '' ? '```\n\n' : '```\n');
                    if (command.usage !== '') CMD_HELP += '*‚å®Ô∏è ' + Lang.EXAMPLE + ':* ```' + command.usage + '```\n\n';
                    if (command.warn !== '') CMD_HELP += '*‚ö†Ô∏è ' + Lang.WARN + ':* ```' + command.warn + '```\n\n';

                }
            );
        
            await message.client.sendMessage(
                message.jid, MSG + CMD_HELP + FMSG, MessageType.text, {contextInfo: { forwardingScore: 1000, isForwarded: true }, quoted: message.data
            })
        } else {

            if (message.jid === '905524317852-1612300121@g.us') {

                return;
            }
            var CMD_HELP = '';
            WhatsAlexa.commands.map(
                async (command) =>  {
                    if (command.dontAddCommandList || command.pattern === undefined) return;
                    try {
                        var cmatch = command.pattern.toString().match(/(\W*)([A-Za-zƒü√º≈üi√∂√ß1234567890]*)/);
                    } catch {
                        var cmatch = [command.pattern];
                    }
                
                    if (cmatch[2] == match[1]) {
                        var HANDLER = '';
    
                        if (/\[(\W*)\]/.test(Config.HANDLERS)) {
                            HANDLER = Config.HANDLERS.match(/\[(\W*)\]/)[1][0];
                        } else {
                            HANDLER = '.';
                        }
                        CMD_HELP += '*üéØ ' + Lang.COMMAND + ':* ```' + (cmatch.length >= 3 ? (HANDLER + cmatch[2]) : command.pattern) + (command.desc === '' ? '```\n\n' : '```\n');
                        if (command.desc !== '') CMD_HELP += '*üìù ' + Lang.DESC + ':* ```' + command.desc + (command.warn === '' ? '```\n\n' : '```\n');
                        if (command.usage !== '') CMD_HELP += '*‚å®Ô∏è ' + Lang.EXAMPLE + ':* ```' + command.usage + '```\n\n';
                        if (command.warn !== '') CMD_HELP += '*‚ö†Ô∏è ' + Lang.WARN + ':* ```' + command.warn + '```\n\n';

                    }
                }
            );
            if (CMD_HELP === '') CMD_HELP += Lang.NOT_FOUND;
            await message.client.sendMessage(
                message.jid, MSG + CMD_HELP + FMSG, MessageType.text, {contextInfo: { forwardingScore: 1000, isForwarded: true }, quoted: message.data
            })
        }
    }));
